plugins {
    id "com.timgroup.jarmangit" version "1.1.86" apply false
    id "com.github.maiflai.scalatest" version "0.19" apply false
}

if (project.hasProperty('scalaTarget')) {
    ext.scalaVersion = scalaTarget
    if (scalaTarget =~ /^2\.9\./) {
        ext.scalaApiVersion = scalaTarget
    } else {
        def matcher = scalaTarget =~ /(\d+\.\d+)\.(\d+)/
        if (matcher.matches()) {
            ext.scalaApiVersion = matcher.group(1)
        } else {
            ext.scalaApiVersion = scalaTarget
        }
    }
    logger.info "Scala: using (specified) library " + ext.scalaVersion + " and API version " + ext.scalaApiVersion
} else {
    ext.scalaVersion = '2.12.8'
    ext.scalaApiVersion = '2.12'
    logger.info "Scala: using (default) library " + ext.scalaVersion + " and API version " + ext.scalaApiVersion
}

ext {
    buildNumber = System.getenv("BUILD_NUMBER") ?: System.getenv("TRAVIS_BUILD_NUMBER")
}

task createDb {
    doFirst {
        def mysql_exec = { db, cmd ->
            project.exec {
                if (db) {
                    commandLine("mysql", db, "-e$cmd")
                }
                else {
                    commandLine("mysql", "-e$cmd")
                }
                environment("MYSQL_HOST", "127.0.0.1")
            }
        }
        mysql_exec(null, "drop database if exists sql_eventstore")
        mysql_exec(null, "create database sql_eventstore")
        mysql_exec("sql_eventstore", "CREATE TABLE Event(eventType VARCHAR(255), body BLOB, version INT PRIMARY KEY, effective_timestamp datetime)")
    }
}

task publishScala {
}

subprojects {
    afterEvaluate {
        if (project.plugins.hasPlugin("scala")) {
            rootProject.tasks["publishScala"].dependsOn(tasks["publish"])
        }
    }
}
