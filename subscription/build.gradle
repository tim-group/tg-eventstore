plugins {
    id "java-library"
    id "com.timgroup.jarmangit"
    id "maven-publish"
}

group = 'com.timgroup'
if (buildNumber) version = '0.0.' + buildNumber

repositories {
    maven {
        url "${repoUrl}/groups/public"
    }
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
    withSourcesJar()
    withJavadocJar()
}

dependencies {
    api project(":api")
    compileOnly "com.google.code.findbugs:jsr305:1.3.9"
    implementation "com.lmax:disruptor:3.3.2"
    implementation "com.timgroup:tim-structured-events:0.4.1288" // autobump
    implementation "com.google.guava:guava:30.1-jre"
    implementation "com.fasterxml.jackson.core:jackson-databind:2.9.8"
    implementation "org.slf4j:slf4j-api:1.7.25"

    testImplementation project(":api:testlib")
    testImplementation project(":memory")
    testImplementation "junit:junit:4.13.2"
    testImplementation "org.hamcrest:hamcrest-core:1.3"
    testImplementation "org.hamcrest:hamcrest-library:1.3"
    testImplementation "com.timgroup:clocks-testing:1.0.1111" // autobump
    testImplementation "com.timgroup:tim-structured-events-testing:0.4.1288" // autobump
    testImplementation "org.mockito:mockito-core:3.7.7"
    testImplementation "com.youdevise:Matchers:0.0.1293" // autobump
    testImplementation "net.ttsui.junit.rules.pending:pending:0.0.1055"
    testRuntimeOnly "org.slf4j:slf4j-simple:1.7.32"
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = "UTF-8"
    options.incremental = true
    options.deprecation = true
    options.compilerArgs << "-parameters"
    options.compilerArgs << "-Xlint:unchecked"
}

tasks.withType(Jar).configureEach {
    manifest {
        attributes(
                'Implementation-Title': project.name,
                'Implementation-Version': project.version,
                'Implementation-Vendor': 'TIM Group Ltd'
        )
    }
}

tasks.named("jar").configure {
    manifest {
        attributes(
                'Automatic-Module-Name': "com.timgroup.eventstore.subscription"
        )
    }
}

publishing {
    repositories {
        if (project.hasProperty("repoUrl")) {
            maven {
                url "${project.repoUrl}/repositories/yd-release-candidates"
                credentials {
                    username = project.repoUsername
                    password = project.repoPassword
                }
            }
        }
    }
    publications {
        mavenJava(MavenPublication) {
            artifactId "eventstore-subscription"
            from components.java
        }
    }
}
